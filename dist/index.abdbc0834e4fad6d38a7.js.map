{"version":3,"file":"index.abdbc0834e4fad6d38a7.js","mappings":"mBAAA,MAAMA,EAAQ,CACZ,QAAS,QAAS,QAAS,MAAO,OAClC,cAAe,aAAc,OAAQ,MAAO,KAC5C,UAAW,SAAU,aAAc,KAAM,SACzC,KAAM,SAAU,QAAS,SAAU,KAAM,OACzC,KAAM,QAAS,SAAU,OAAQ,WCFnC,SAASC,EAAaC,GACpB,MAAMC,EAAW,IAAID,GACrB,IAAK,IAAIE,EAAID,EAASE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC5C,MAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,KACzCD,EAASC,GAAID,EAASG,IAAM,CAACH,EAASG,GAAIH,EAASC,GACtD,CACA,OAAOD,CACT,CA2MAO,SAASC,iBAAiB,mBApL1B,WACE,MAAMC,EAAMF,SAASG,eAAe,OACpCD,EAAIE,UAAY,0bAahB,MAAMC,EAAYL,SAASM,cAAc,UACzCD,EAAUE,KAAO,SACjBF,EAAUG,GAAK,gBACfH,EAAUI,YAAc,mBACxBJ,EAAUK,MAAMC,aAAe,OAC/BN,EAAUJ,iBAAiB,QAAS,KAClC,MAAMW,EAAYZ,SAASG,eAAe,UACpCU,EAAuC,SAA5BD,EAAUF,MAAMI,QACjCF,EAAUF,MAAMI,QAAUD,EAAW,OAAS,OAC9CR,EAAUI,YAAcI,EAAW,mBAAqB,qBAE1DX,EAAIa,QAAQV,GAEZ,MAAMW,EAAiBhB,SAASG,eAAe,cAC/Ca,EAAef,iBAAiB,QAAS,KACvCgB,WAAW,KACTD,EAAeE,UACd,KAIL,MAAMN,EAAYZ,SAASG,eAAe,UAC1C,IAAK,IAAIT,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMyB,EAAQnB,SAASM,cAAc,SACrCa,EAAMZ,KAAO,OACbY,EAAMC,YAAc,QAAQ1B,EAAI,IAChCyB,EAAME,KAAO,OACbF,EAAMlB,iBAAiB,QAAS,KAC1BkB,EAAMG,MAAM3B,OAAS,MACvBwB,EAAMG,MAAQH,EAAMG,MAAMC,MAAM,EAAG,QAIvCJ,EAAMlB,iBAAiB,QAAS,KAC9BkB,EAAMD,WAIRN,EAAUY,YAAYL,EACxB,CAEAnB,SAASG,eAAe,cAAcF,iBAAiB,SAAUwB,IAC/DA,EAAEC,iBAEF,IAAIC,EAASC,MAAMC,KAAKjB,EAAUkB,iBAAiB,UAAUC,IAAIrC,GAAKA,EAAE4B,MAAMU,QAC9EL,EDrFG,SAAoBA,EAAQM,EAAY,IAC7C,IAAIC,EAAS,IAAIP,GACbQ,EAAmB,EAEvB,IAAK,IAAIzC,EAAI,EAAGA,EAAIwC,EAAOvC,OAAQD,IACjC,IAAKwC,EAAOxC,GAAI,CACd,IAAI0C,EAAO9C,EAAM6C,EAAmB7C,EAAMK,QAC1CuC,EAAOxC,GAAK0C,EAAKb,MAAM,EAAGU,GAC1BE,GACF,CAGF,OAAOD,CACT,CCwEaG,CAAWV,GAEpB,MACMW,EApFV,SAA4BX,EAAQY,GAClC,MAAMD,EAAQ,GACd,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAWC,IAAK,CAClC,MAAM/C,EAAWF,EAAaoC,GACxBc,EAAO,GACb,IAAIC,EAAQ,EACZ,IAAK,IAAIC,EAAM,EAAGA,EAAM,EAAGA,IAAO,CAChCF,EAAKE,GAAO,GACZ,IAAK,IAAIC,EAAM,EAAGA,EAAM,EAAGA,IAEvBH,EAAKE,GAAKC,GADA,IAARD,GAAqB,IAARC,EACE,OAEAnD,EAASiD,IAGhC,CACAJ,EAAMO,KAAKJ,EACb,CACA,OAAOH,CACT,CAiEkBQ,CAAmBnB,EADfoB,SAAS/C,SAASG,eAAe,cAAcmB,QAG3D0B,EAAShD,SAASG,eAAe,gBACvC6C,EAAO5C,UAAY,GAEnBkC,EAAMW,QAAQ,CAACR,EAAM/C,KACnB,MAAMwD,EAAgBlD,SAASM,cAAc,OAC7C4C,EAAcC,UAAY,OAC1B,MAAMC,EAAQpD,SAASG,eAAe,cAAcmB,MAAMU,QAAU,QAAQtC,EAAI,IAC1E2D,EAAerD,SAASM,cAAc,MAC5C+C,EAAa5C,YAAc,GAAG2C,IAC9BF,EAAc1B,YAAY6B,GAE1B,MAAMC,EAAOtD,SAASM,cAAc,OACpCgD,EAAKH,UAAY,YAEjBV,EAAKc,OAAON,QAAQO,IAClB,MAAMC,EAAUzD,SAASM,cAAc,OACvCmD,EAAQN,UAAY,OACpBM,EAAQhD,YAAc+C,EACtBF,EAAK9B,YAAYiC,KAGnB,MAAMC,EAAW1D,SAASM,cAAc,UACxCoD,EAASjD,YAAc,kBACvBiD,EAASP,UAAY,iBACrBO,EAASzD,iBAAiB,QAAS,KACjC,MAAM0D,EAAQT,EAAcU,WAAU,GAEhCC,EAAcC,OAAOC,KAAK,GAAI,UACpCF,EAAY7D,SAASgE,MAAM,umEAuE3BH,EAAY7D,SAASiE,KAAKzC,YAAYmC,GACtCE,EAAY7D,SAASkE,QACrBL,EAAYM,QACZN,EAAYO,QACZP,EAAYK,UAKdhB,EAAc1B,YAAY8B,GAC1BJ,EAAc1B,YAAYkC,GAC1BV,EAAOxB,YAAY0B,MAGzB,E","sources":["webpack://bingogen/./src/js/fillPlaceholders.js","webpack://bingogen/./src/js/index.js"],"sourcesContent":["const lorem = [\n  \"Lorem\", \"Ipsum\", \"Dolor\", \"Sit\", \"Amet\",\n  \"Consectetur\", \"Adipiscing\", \"Elit\", \"Sed\", \"Do\",\n  \"Eiusmod\", \"Tempor\", \"Incididunt\", \"Ut\", \"Labore\",\n  \"Et\", \"Dolore\", \"Magna\", \"Aliqua\", \"Ut\", \"Enim\",\n  \"Ad\", \"Minim\", \"Veniam\", \"Quis\", \"Nostrud\"\n];\n\nexport function fillBlanks(inputs, maxLength = 25) {\n  let filled = [...inputs];\n  let placeholderIndex = 0;\n\n  for (let i = 0; i < filled.length; i++) {\n    if (!filled[i]) {\n      let word = lorem[placeholderIndex % lorem.length];\n      filled[i] = word.slice(0, maxLength);\n      placeholderIndex++;\n    }\n  }\n\n  return filled;\n}\n","import '../css/index.less';\nimport { fillBlanks } from './fillPlaceholders.js';\n\nfunction shuffleArray(array) {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n}\n\nfunction generateBingoCards(inputs, cardCount) {\n  const cards = [];\n  for (let n = 0; n < cardCount; n++) {\n    const shuffled = shuffleArray(inputs);\n    const card = [];\n    let index = 0;\n    for (let row = 0; row < 5; row++) {\n      card[row] = [];\n      for (let col = 0; col < 5; col++) {\n        if (row === 2 && col === 2) {\n          card[row][col] = \"FREE\";\n        } else {\n          card[row][col] = shuffled[index++];\n        }\n      }\n    }\n    cards.push(card);\n  }\n  return cards;\n}\n\nfunction createUI() {\n  const app = document.getElementById('app');\n  app.innerHTML = `\n    <form id=\"bingo-form\">\n      <div id=\"inputs\" class=\"grid-input\"></div>\n      <label>Card Title:\n        <input type=\"text\" id=\"card-title\" placeholder=\"My Bingo Card\" maxlength=\"50\" />\n      </label>\n      <label>Number of Cards:\n        <input type=\"number\" id=\"card-count\" value=\"1\" min=\"1\" max=\"100\" />\n      </label>\n      <button type=\"submit\">Generate Cards</button>\n    </form>\n    <div id=\"cards-output\"></div>\n  `;\n  const toggleBtn = document.createElement('button');\n  toggleBtn.type = 'button';\n  toggleBtn.id = 'toggle-inputs';\n  toggleBtn.textContent = 'Hide Item Inputs';\n  toggleBtn.style.marginBottom = '1rem';\n  toggleBtn.addEventListener('click', () => {\n    const inputsDiv = document.getElementById('inputs');\n    const isHidden = inputsDiv.style.display === 'none';\n    inputsDiv.style.display = isHidden ? 'grid' : 'none';\n    toggleBtn.textContent = isHidden ? 'Hide Item Inputs' : 'Show Item Inputs';\n  });\n  app.prepend(toggleBtn);\n\n  const cardCountInput = document.getElementById('card-count');\n  cardCountInput.addEventListener('focus', () => {\n    setTimeout(() => {\n      cardCountInput.select();\n    }, 0);\n  });\n\n\n  const inputsDiv = document.getElementById('inputs');\n  for (let i = 0; i < 24; i++) {\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.placeholder = `Item ${i + 1}`;\n    input.name = 'item';\n    input.addEventListener('input', () => {\n      if (input.value.length > 128) {\n        input.value = input.value.slice(0, 128);\n      }\n\n    });\n    input.addEventListener('focus', () => {\n      input.select();\n    });\n\n\n    inputsDiv.appendChild(input);\n  }\n\n  document.getElementById('bingo-form').addEventListener('submit', e => {\n    e.preventDefault();\n\n    let inputs = Array.from(inputsDiv.querySelectorAll('input')).map(i => i.value.trim());\n    inputs = fillBlanks(inputs);\n\n    const cardCount = parseInt(document.getElementById('card-count').value);\n    const cards = generateBingoCards(inputs, cardCount);\n\n    const output = document.getElementById('cards-output');\n    output.innerHTML = '';\n\n    cards.forEach((card, i) => {\n      const cardContainer = document.createElement('div');\n      cardContainer.className = 'card';\n      const title = document.getElementById('card-title').value.trim() || `Card ${i + 1}`;\n      const titleHeading = document.createElement('h3');\n      titleHeading.textContent = `${title}`;\n      cardContainer.appendChild(titleHeading);\n      // Create card grid\n      const grid = document.createElement('div');\n      grid.className = 'card-grid';\n\n      card.flat().forEach(cell => {\n        const cellDiv = document.createElement('div');\n        cellDiv.className = 'cell';\n        cellDiv.textContent = cell;\n        grid.appendChild(cellDiv);\n      });\n\n      const printBtn = document.createElement('button');\n      printBtn.textContent = 'Print this card';\n      printBtn.className = 'card-print-btn';\n      printBtn.addEventListener('click', () => {\n        const clone = cardContainer.cloneNode(true);\n\n        const printWindow = window.open('', '_blank');\n        printWindow.document.write(`\n          <html>\n            <head>\n              <title>Bingo Card</title>\n              <style>\n                <style>\n                  @page {\n                    size: 8.5in 11in;\n                    margin: 1in;\n                  }\n\n                  body {\n                    font-family: sans-serif;\n                    margin: 0;\n                    padding: 0;\n                    display: flex;\n                    justify-content: center;\n                    align-items: center;\n                    height: 100vh;\n                  }\n\n                  .card {\n                    width: 100%;\n                    max-width: 7.5in;\n                    aspect-ratio: 1 / 1;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    padding: 1rem;\n                    box-sizing: border-box;\n                    page-break-inside: avoid;\n                  }\n\n                  .card h3 {\n                    margin-top: 0;\n                    margin-bottom: 1rem;\n                    font-size: 1.25rem;\n                  }\n\n                  .card-grid {\n                    display: grid;\n                    grid-template-columns: repeat(5, 1fr);\n                    gap: 0.25rem;\n                    width: 100%;\n                    height: 100%;\n                  }\n\n                  .cell {\n                    border: 1px solid #333;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    font-weight: bold;\n                    font-size: 0.85rem;\n                    padding: 0.5rem;\n                    aspect-ratio: 1 / 1;\n                    text-align: center;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                    white-space: nowrap;\n                  }\n\n                  button {\n                    display: none;\n                  }\n              </style>\n            </head>\n            <body></body>\n          </html>\n        `);\n\n        printWindow.document.body.appendChild(clone);\n        printWindow.document.close();\n        printWindow.focus();\n        printWindow.print();\n        printWindow.close();\n      });\n\n\n\n      cardContainer.appendChild(grid);\n      cardContainer.appendChild(printBtn);\n      output.appendChild(cardContainer);\n    });\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', createUI);\n"],"names":["lorem","shuffleArray","array","shuffled","i","length","j","Math","floor","random","document","addEventListener","app","getElementById","innerHTML","toggleBtn","createElement","type","id","textContent","style","marginBottom","inputsDiv","isHidden","display","prepend","cardCountInput","setTimeout","select","input","placeholder","name","value","slice","appendChild","e","preventDefault","inputs","Array","from","querySelectorAll","map","trim","maxLength","filled","placeholderIndex","word","fillBlanks","cards","cardCount","n","card","index","row","col","push","generateBingoCards","parseInt","output","forEach","cardContainer","className","title","titleHeading","grid","flat","cell","cellDiv","printBtn","clone","cloneNode","printWindow","window","open","write","body","close","focus","print"],"sourceRoot":""}